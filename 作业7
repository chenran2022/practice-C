#include<stdio.h>
//lesson  11

//int main()
//{
//	int n = 0;
//	scanf("%d", &n);
//	int arr[40] = { 0 };
//	int i = 0;
//	while (n )
//	{
//		arr[i++] = n % 6;
//		n = n / 6;
//	}
//	
//	/*int j = 0;
//	for (j = i-1; j >= 0; j--)
//	{
//		printf("%d", arr[j]);
//	}*/
//	for (i--; i >= 0; i--)
//	{
//		printf("%d", arr[i]);
//	}
//	return 0;
//}

//int main()
//{
//	int n = 0;
//	scanf("%d", & n);
//	long long sum = 0;
//	for (int i = 1; i <= n; i++)
//	{
//		sum += i;
//	}
//	printf("%lld", sum);
//	return 0;
//}

//int main()
//{
//	long long n = 0;
//	scanf("%lld", &n);
//	long long sum = 0;
//	sum = (1 + n) * n / 2;
//	printf("%lld", sum);
//	return 0;
//}

//int main()
//{
//	int h = 0;
//	int m = 0;
//	int k = 0;
//	while (~scanf("%d:%d %d", &h, &m,&k))
//	{
//		//h = (h + k / 60) % 24+ (m + k % 60) / 60;
//		h = ((m + k) / 60 + h)%24; 
//		m =(m+ k % 60)%60;
//		printf("%02d:%02d\n", h, m);
//	}
//	return 0;
//}

//int main()
//{
//	int n = 0;
//	scanf("%d", &n);
//	int count = 0;
//	/*while (n / 12)
//	{
//		count++;
//		n /= 12;
//	}
//	printf("%d\n", 4 * count + 2);*/
//	printf("%d\n", (n / 12) * 4 + 2);
//	return 0;
//}


//辗转相除法：求最小公倍数和最大公约数
//int main()
//{
//	long long n = 0;
//	long long m = 0;
//	scanf("%lld %lld", &n, &m);
//	long long tmp1 = n;
//	long long tmp2 = m;
//	long long tmp = 0;
//	long long max = 0;
//	long long min = 0;
//	while (tmp = tmp1 % tmp2)
//	{
//		tmp1 = tmp2;
//		tmp2 = tmp;
//	}
//	max = tmp2;
//	min = n * m / max;
//	printf("%lld\n", max + min);
//	return 0;
//}

//#include<math.h>
//int main()
//{
//	int n = 0;
//	scanf("%d", &n);
//	int i = 0;
//	int sum = 0;
//	int m = 0;
//	while (n)
//	{
//		int tmp=n% 10;
//		if (tmp % 2 == 0)
//		{
//			m = 0;
//		}
//		else
//			m = 1;
//		sum += m*pow(10, i);
//		i++;
//		n /= 10;
//	}
//	printf("%d", sum);
//	return 0;
//}


//int f(int n)
//{
//	if (n <= 2)
//		return n;
//	else
//		return f(n - 1) + f(n - 2);
//}
//int main()
//{
//	int n = 0;
//	scanf("%d", &n);
//	int ret=f(n);
//	printf("%d", ret);
//	return 0;
//}

//int main()
//{
//	int n = 0;
//	scanf("%d", &n);
//	int arr[100001] = { 0 };
//	int i = 0;
//	for (i = 0; i < n; i++)
//	{
//		int k = 0;
//		scanf("%d", &k);
//		arr[k] = k;
//	}
//	for (i = 1; i <= n; i++)
//	{
//		if (arr[i] == i)
//			printf("%d ", arr[i]);
//	}
//	return 0;
//}

//int main()
//{
//	char arr[8000] = { 0 };
//	scanf("%s", arr);
//	long long c = 0;
//	long long ch = 0;
//	long long chn = 0;
//	char* p = arr;
//	while (*p)
//	{
//		if (*p == 'C')
//			c++;
//		else if (*p == 'H')
//			ch += c;
//		else if (*p == 'N')
//			chn += ch;
//		p++;
//	}
//	printf("%lld\n", chn);
//	return 0;
//}

//int main()
//{
//	int arr[4] = { 0 };
//	int i = 0;
//	for (i = 0; i < 4; i++)
//	{
//		scanf("%d", &arr[i]);
//	}
//	int max = arr[0];
//	for (i = 0; i < 4; i++)
//	{
//		if (max < arr[i])
//			max = arr[i];
//	}
//	printf("%d", max);
//	return 0;
//}

//int max3(int a, int b, int c)
//{
//	if (a < b)
//		a = b;
//	if (a < c)
//		a = c;
//	return a;
//}
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	scanf("%d %d %d", &a, &b, &c);
//	//float ret = (float)max3(a + b, b, c) /(max3(a, b + c, c) + max3(a, b, b + c));
//	float ret = 1.0*max3(a + b, b, c) / (max3(a, b + c, c) + max3(a, b, b + c));
//	printf("%.2f", ret);
//	return 0;
//}
